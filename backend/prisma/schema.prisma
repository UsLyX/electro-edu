generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id           Int        @id @default(autoincrement())
  lastName     String
  firstName    String
  email        String     @unique
  password     String
  class        Class      @relation(fields: [classId], references: [id])
  middleName   String?
  phone        String?    @unique
  dateOfBirth  DateTime?
  dateRegister DateTime   @default(now())
  classId      Int
  status       userStatus @default(PROCESSING)
}

model Teacher {
  id           Int             @id @default(autoincrement())
  lastName     String
  firstName    String
  email        String          @unique
  password     String
  predmets     TeacherLesson[]
  middleName   String?
  phone        String?         @unique
  dateOfBirth  DateTime?
  dateRegister DateTime        @default(now())
  status       userStatus      @default(PROCESSING)
}

model TeacherLesson {
  lesson     Lesson  @relation(fields: [lessonName], references: [lessonName])
  lessonName String
  teacher    Teacher @relation(fields: [teacherID], references: [id])
  teacherID  Int

  @@id([lessonName, teacherID])
}

model Lesson {
  id            Int             @id @default(autoincrement())
  lessonName    String          @unique
  TeacherLesson TeacherLesson[]
  ClassLessons  ClassLessons[]
}

model Class {
  id           Int            @id @default(autoincrement())
  className    String         @unique
  Student      Student[]
  ClassLessons ClassLessons[]
}

model ClassLessons {
  class      Class  @relation(fields: [classId], references: [id])
  classId    Int
  lesson     Lesson @relation(fields: [lessonName], references: [lessonName])
  lessonName String

  @@id([classId, lessonName])
}

model Admin {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
}

enum userStatus {
  ACCEPTED
  REJECTED
  PROCESSING
}
